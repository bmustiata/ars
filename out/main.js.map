{"version":3,"sources":["webpack:///webpack/bootstrap 7f891c0d931280d84781","webpack:///external \"babel-polyfill\"","webpack:///./src/main.ts","webpack:///external \"fs\"","webpack:///external \"handlebars\"","webpack:///external \"colors\"","webpack:///external \"fs-extra\"","webpack:///external \"path\"","webpack:///external \"child_process\""],"names":[],"mappings":"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","file":"out/main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7f891c0d931280d84781","module.exports = require(\"babel-polyfill\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-polyfill\"\n// module id = 1\n// module chunks = 0","// ==========================================================================\n// Requires\n// ==========================================================================\nimport * as fs from \"fs\"\nimport * as handlebars from \"handlebars\"\nimport * as colors from \"colors\"\nimport * as fsExtra from \"fs-extra\"\nimport * as path from \"path\"\nimport * as childProcess from \"child_process\"\n\nconst ARS_PROJECTS_FOLDER = process.env.ARS_PROJECTS_FOLDER ?\n                process.env.ARS_PROJECTS_FOLDER :\n                path.join(process.env.HOME, \".projects\")\n\nconst ARS_DIFF_TOOL = process.env.ARS_DIFF_TOOL ?\n                process.env.ARS_DIFF_TOOL :\n                'vimdiff'\n\n// ==========================================================================\n// Parse the projectName, and projectParameters from the program arguments\n// ==========================================================================\nconst args : Array<string> = [];\nargs.push(...process.argv)\nargs.splice(0, 2)\n\nlet generateArs = true\n\nconst noArsParameterPosition = args.indexOf('-n')\n\nif (noArsParameterPosition >= 0) {\n    generateArs = false;\n    args.splice(noArsParameterPosition, 1);\n}\n\n// ==========================================================================\n// Read previous settings if they are available\n// ==========================================================================\n\nlet projectParameters = null\n\nif (isFile(\".ars\")) {\n    projectParameters = JSON.parse(fs.readFileSync(\".ars\", \"utf-8\"))\n    console.log(colors.cyan(`Using already existing '.ars' file settings: ${JSON.stringify(projectParameters)}`))\n}\n\n// we don't have project parameters, nor default settins, bailing out\nif (!args.length && !projectParameters) {\n    console.log(colors.red(\"You need to pass a project name to generate.\"))\n\n    console.log(`Available projects (${colors.cyan(ARS_PROJECTS_FOLDER)}):`)\n    fs.readdirSync(ARS_PROJECTS_FOLDER)\n      .sort()\n      .forEach((it) => {\n        console.log(` * ${it}`)\n      })\n\n    process.exit(1)\n}\n\n// if we have arguments, we need to either create, or augument the projectParameters\n// with the new settings.\nif (args.length) {\n    projectParameters = projectParameters ? projectParameters : {}\n\n    projectParameters['NAME'] = args[0]\n    args.splice(0, 1)\n}\n\n// we iterate the rest of the parameters, and augument the projectParameters\nconst PARAM_RE = /^(.*?)(=(.*))?$/\nargs.forEach(function(it, index) {\n    const m = PARAM_RE.exec(it)\n    const paramName = m[1]\n    const paramValue = m[3] ? m[3] : true\n\n    projectParameters[paramName] = paramValue\n    projectParameters[`arg${index}`] = paramName\n})\n\nconst projectName = projectParameters.NAME\n\n// ==========================================================================\n// Generate the actual project.\n// ==========================================================================\nconsole.log(`Generating ${projectName} with ${JSON.stringify(projectParameters)}.`)\n\nif (!isFile(path.join(ARS_PROJECTS_FOLDER, projectName, \".noars\")) && generateArs) {\n    fs.writeFileSync(\".ars\", JSON.stringify(projectParameters), {encoding: \"utf-8\"})\n}\n\nprocessFolder(\".\", path.join(ARS_PROJECTS_FOLDER, projectName))\n\n/**\n * Recursively process the handlebars templates for the given project.\n * @param {string} currentPath\n * @param {string} fullFolderPath\n */\nfunction processFolder(currentPath, fullFolderPath) {\n    fs.readdirSync(fullFolderPath).forEach(function(fileName) {\n        let f = parseFileName(fileName, projectParameters)\n\n        let fullLocalPath = path.join(currentPath, f.name);\n        let fullFilePath = path.join(fullFolderPath, f.originalName);\n\n        if (fileName == \".noars\") {\n            console.log(colors.yellow(\"Ignoring file        : \" + \".noars\"))\n            return\n        }\n\n        if (isDirectory(fullFilePath)) {\n            if (isDirectory(fullLocalPath)) {\n                console.log(colors.yellow(\"Already exists folder: \" + fullLocalPath));\n            } else {\n                console.log(colors.cyan(\"Creating folder      : \" + fullLocalPath))\n                fs.mkdirSync(fullLocalPath);\n            }\n\n            processFolder(fullLocalPath, fullFilePath);\n            return;\n        }\n\n\n        if (f.keepExisting && isFile(fullLocalPath)) {\n            console.log(colors.yellow(\"Keeping regular file : \" + fullLocalPath))\n            return;\n        }\n\n        if (!f.hbsTemplate) {\n            if (!isFile(fullLocalPath)) {\n                console.log(colors.cyan(\"Copying regular file : \" + fullLocalPath))\n                fsExtra.copySync(fullFilePath, fullLocalPath);\n\n                return;\n            }\n\n            if (fs.readFileSync(fullFilePath, \"utf-8\") == fs.readFileSync(fullLocalPath, \"utf-8\")) {\n                console.log(colors.cyan(\"No update needed     : \" + fullLocalPath));\n                return;\n            }\n\n            // we have a conflict.\n            let fullLocalPathOrig = fullLocalPath + \".orig\"\n\n            fsExtra.copySync(fullLocalPath, fullLocalPathOrig);\n            fsExtra.copySync(fullFilePath, fullLocalPath);\n            executeDiff(ARS_DIFF_TOOL, fullLocalPath, fullLocalPathOrig);\n            fs.unlinkSync(fullLocalPathOrig);\n\n            console.log(colors.red(\"Conflict resolved    : \" + fullLocalPath));\n\n            return;\n        }\n\n\n        let templateContent = fs.readFileSync(fullFilePath, \"utf-8\")\n        let template = handlebars.compile(templateContent)\n        let content = template(projectParameters)\n\n        if (!isFile(fullLocalPath)) {\n            console.log(colors.cyan(\"Parsing HBS template : \" + fullLocalPath))\n            fs.writeFileSync(fullLocalPath, content, {encoding: \"utf-8\"})\n\n            return;\n        }\n\n        if (content == fs.readFileSync(fullLocalPath, \"utf-8\")) {\n            console.log(colors.cyan(\"No update needed     : \" + fullLocalPath));\n            return;\n        }\n\n        let fullLocalPathOrig = fullLocalPath + \".orig\"\n\n        fsExtra.copySync(fullLocalPath, fullLocalPathOrig);\n        fs.writeFileSync(fullLocalPath, content, {encoding: \"utf-8\"})\n        executeDiff(ARS_DIFF_TOOL, fullLocalPath, fullLocalPathOrig);\n        fs.unlinkSync(fullLocalPathOrig);\n\n        console.log(colors.red(\"Conflict resolved HBS: \" + fullLocalPath));\n    });\n}\n\n/**\n * parseFileName - Parse the file name\n * @param {string} fileName\n * @param {any} projectParameters\n * @return {Object}\n */\nfunction parseFileName(fileName, projectParameters) {\n    const result = {\n        name: null,\n        originalName: fileName,\n        keepExisting: false,\n        hbsTemplate: false\n    };\n\n    let name = fileName;\n\n    if (/\\.KEEP$/.test(name)) {\n        result.keepExisting = true\n        name = name.substring(0, name.length - \".KEEP\".length)\n    }\n\n    if (/\\.hbs/.test(name)) {\n        result.hbsTemplate = true\n        name = name.substring(0, name.length - \".hbs\".length)\n    }\n\n    result.name = handlebars.compile(name)(projectParameters);\n\n    return result;\n}\n\n/**\n * isDirectory - Checks if the given file path is a directory.\n * @param {string} name\n * @return {boolean}\n */\nfunction isDirectory(name) {\n    try {\n        return fs.statSync(name).isDirectory();\n    } catch (e) {\n        return false;\n    }\n}\n\n/**\n * isFile - Checks if the given file path is an existing file\n * @param {string} name\n * @return {boolean}\n */\nfunction isFile(name) {\n    try {\n        return fs.statSync(name).isFile();\n    } catch (e) {\n        return false;\n    }\n}\n\n/**\n * executeDiff - Execute the given diff process.\n * @param {string} diff program name\n * @param {string} file1 first file to diff\n * @param {string} file2 second file do diff\n * @return {void}\n */\nfunction executeDiff(processName, file1, file2) {\n    childProcess.execSync(\n        `${processName} \"${file1}\" \"${file2}\"`,\n        {stdio:[0,1,2]});\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"handlebars\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"handlebars\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"colors\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"colors\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"fs-extra\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs-extra\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"child_process\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"child_process\"\n// module id = 8\n// module chunks = 0"],"sourceRoot":""}